{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "raamadf"
		},
		"AzurSQDBBLL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzurSQDBBLL'"
		},
		"AzureDataLakelinkedservice_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakelinkedservice'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureDataLakelinkedservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://saramadlsgen2.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/1_firstpipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy data in to out",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy from out  to arc",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "copy data in to out",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy from out  to arc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureDataLakelinkedservice",
									"type": "LinkedServiceReference"
								},
								"path": "project-contianer/project/output"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText3')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText4')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_parapipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "para_dataset",
								"type": "DatasetReference",
								"parameters": {
									"ds_file_system": {
										"value": "@pipeline().parameters.pp_file_system",
										"type": "Expression"
									},
									"ds_directory": {
										"value": "@pipeline().parameters.pp_directory_in",
										"type": "Expression"
									},
									"ds_file_name": {
										"value": "@pipeline().parameters.pp_file_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "para_dataset",
								"type": "DatasetReference",
								"parameters": {
									"ds_file_system": {
										"value": "@pipeline().parameters.pp_file_system",
										"type": "Expression"
									},
									"ds_directory": {
										"value": "@pipeline().parameters.pp_directory_out",
										"type": "Expression"
									},
									"ds_file_name": {
										"value": "@pipeline().parameters.pp_file_name",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "para_dataset",
								"type": "DatasetReference",
								"parameters": {
									"ds_file_system": {
										"value": "@pipeline().parameters.pp_file_system",
										"type": "Expression"
									},
									"ds_directory": {
										"value": "@pipeline().parameters.pp_directory_out",
										"type": "Expression"
									},
									"ds_file_name": {
										"value": "@pipeline().parameters.pp_file_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "para_dataset",
								"type": "DatasetReference",
								"parameters": {
									"ds_file_system": {
										"value": "@pipeline().parameters.pp_file_system",
										"type": "Expression"
									},
									"ds_directory": {
										"value": "@pipeline().parameters.pp_directory_arc",
										"type": "Expression"
									},
									"ds_file_name": {
										"value": "@pipeline().parameters.pp_file_name",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "para_dataset",
								"type": "DatasetReference",
								"parameters": {
									"ds_file_system": {
										"value": "@pipeline().parameters.pp_file_system",
										"type": "Expression"
									},
									"ds_directory": {
										"value": "@pipeline().parameters.pp_directory_arc",
										"type": "Expression"
									},
									"ds_file_name": {
										"value": "@pipeline().parameters.pp_file_name",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pp_file_system": {
						"type": "string"
					},
					"pp_directory_in": {
						"type": "string"
					},
					"pp_file_name": {
						"type": "string"
					},
					"pp_directory_out": {
						"type": "string"
					},
					"pp_directory_arc": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-31T16:08:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/para_dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_forpipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "para_dataset",
								"type": "DatasetReference",
								"parameters": {
									"ds_file_system": {
										"value": "@pipeline().parameters.pp_file_system",
										"type": "Expression"
									},
									"ds_directory": {
										"value": "@pipeline().parameters.pp_directory_in",
										"type": "Expression"
									},
									"ds_file_name": {
										"value": "@pipeline().parameters.pp_file_name",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"itemName",
								"itemType",
								"childItems",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "para_dataset",
											"type": "DatasetReference",
											"parameters": {
												"ds_file_system": {
													"value": "@pipeline().parameters.pp_file_system",
													"type": "Expression"
												},
												"ds_directory": {
													"value": "@pipeline().parameters.pp_directory_in",
													"type": "Expression"
												},
												"ds_file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "para_dataset",
											"type": "DatasetReference",
											"parameters": {
												"ds_file_system": {
													"value": "@pipeline().parameters.pp_file_system",
													"type": "Expression"
												},
												"ds_directory": {
													"value": "@pipeline().parameters.pp_directory_out",
													"type": "Expression"
												},
												"ds_file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pp_file_system": {
						"type": "string"
					},
					"pp_directory_in": {
						"type": "string"
					},
					"pp_file_name": {
						"type": "string"
					},
					"pp_directory_out": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-31T16:08:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/para_dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4_file_sep_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get MD1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "para_data_txt",
								"type": "DatasetReference",
								"parameters": {
									"ds_system": {
										"value": "@pipeline().parameters.pp_system",
										"type": "Expression"
									},
									"ds_directory": {
										"value": "@pipeline().parameters.pp_directory_in",
										"type": "Expression"
									},
									"ds_file": {
										"value": "@pipeline().parameters.pp_file",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"itemName",
								"itemType",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get MD1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get MD1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Ifcond",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@endswith(item().name,'csv')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy data2",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "para_data_txt",
														"type": "DatasetReference",
														"parameters": {
															"ds_system": {
																"value": "@pipeline().parameters.pp_system",
																"type": "Expression"
															},
															"ds_directory": {
																"value": "@pipeline().parameters.pp_directory_in",
																"type": "Expression"
															},
															"ds_file": "@item().name"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "para_data_txt",
														"type": "DatasetReference",
														"parameters": {
															"ds_system": {
																"value": "@pipeline().parameters.pp_system",
																"type": "Expression"
															},
															"ds_directory": {
																"value": "@pipeline().parameters.pp_directory_out_text",
																"type": "Expression"
															},
															"ds_file": "@item().name"
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy data1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "para_data_txt",
														"type": "DatasetReference",
														"parameters": {
															"ds_system": {
																"value": "@pipeline().parameters.pp_system",
																"type": "Expression"
															},
															"ds_directory": {
																"value": "@pipeline().parameters.pp_directory_in",
																"type": "Expression"
															},
															"ds_file": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "para_data_txt",
														"type": "DatasetReference",
														"parameters": {
															"ds_system": {
																"value": "@pipeline().parameters.pp_system",
																"type": "Expression"
															},
															"ds_directory": {
																"value": "@pipeline().parameters.pp_directory_out_csv",
																"type": "Expression"
															},
															"ds_file": "@item().name"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pp_system": {
						"type": "string"
					},
					"pp_directory_in": {
						"type": "string"
					},
					"pp_directory_out_csv": {
						"type": "string"
					},
					"pp_directory_out_text": {
						"type": "string"
					},
					"pp_file": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/para_data_txt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/5_switch_pipe')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "para_data_txt",
								"type": "DatasetReference",
								"parameters": {
									"ds_system": {
										"value": "@pipeline().parameters.pp_system",
										"type": "Expression"
									},
									"ds_directory": {
										"value": "@pipeline().parameters.pp_directory_in",
										"type": "Expression"
									},
									"ds_file": {
										"value": "@pipeline().parameters.pp_file",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Switch1",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@split(item().name,'.')[1]",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "csv",
												"activities": [
													{
														"name": "Copy csv",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".txt"
																}
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "para_data_txt",
																"type": "DatasetReference",
																"parameters": {
																	"ds_system": {
																		"value": "@pipeline().parameters.pp_system",
																		"type": "Expression"
																	},
																	"ds_directory": {
																		"value": "@pipeline().parameters.pp_directory_in",
																		"type": "Expression"
																	},
																	"ds_file": "@item().name"
																}
															}
														],
														"outputs": [
															{
																"referenceName": "para_data_txt",
																"type": "DatasetReference",
																"parameters": {
																	"ds_system": {
																		"value": "@pipeline().parameters.pp_system",
																		"type": "Expression"
																	},
																	"ds_directory": {
																		"value": "@pipeline().parameters.pp_directory_csv",
																		"type": "Expression"
																	},
																	"ds_file": "@item().name"
																}
															}
														]
													}
												]
											},
											{
												"value": "txt",
												"activities": [
													{
														"name": "Copy txt",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".txt"
																}
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "para_data_txt",
																"type": "DatasetReference",
																"parameters": {
																	"ds_system": {
																		"value": "@pipeline().parameters.pp_system",
																		"type": "Expression"
																	},
																	"ds_directory": {
																		"value": "@pipeline().parameters.pp_directory_in",
																		"type": "Expression"
																	},
																	"ds_file": "@item().name"
																}
															}
														],
														"outputs": [
															{
																"referenceName": "para_data_txt",
																"type": "DatasetReference",
																"parameters": {
																	"ds_system": {
																		"value": "@pipeline().parameters.pp_system",
																		"type": "Expression"
																	},
																	"ds_directory": {
																		"value": "@pipeline().parameters.pp_directory_txt",
																		"type": "Expression"
																	},
																	"ds_file": "@item().name"
																}
															}
														]
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "Copy other",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "para_data_txt",
														"type": "DatasetReference",
														"parameters": {
															"ds_system": {
																"value": "@pipeline().parameters.pp_system",
																"type": "Expression"
															},
															"ds_directory": {
																"value": "@pipeline().parameters.pp_directory_in",
																"type": "Expression"
															},
															"ds_file": "@item().name"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "para_data_txt",
														"type": "DatasetReference",
														"parameters": {
															"ds_system": {
																"value": "@pipeline().parameters.pp_system",
																"type": "Expression"
															},
															"ds_directory": {
																"value": "@pipeline().parameters.pp_directory_other",
																"type": "Expression"
															},
															"ds_file": "@item().name"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pp_system": {
						"type": "string"
					},
					"pp_directory_in": {
						"type": "string"
					},
					"pp_file": {
						"type": "string"
					},
					"pp_directory_csv": {
						"type": "string"
					},
					"pp_directory_txt": {
						"type": "string"
					},
					"pp_directory_other": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/para_data_txt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/6_DB_to_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbtofile",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select ProductID,Name,Color,Weight\n from [SalesLT].[Product]\n where Color in ('Black','Red')",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDBselect1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "para_data_txt",
								"type": "DatasetReference",
								"parameters": {
									"ds_system": {
										"value": "@pipeline().parameters.pp_system",
										"type": "Expression"
									},
									"ds_directory": {
										"value": "@pipeline().parameters.pp_folder",
										"type": "Expression"
									},
									"ds_file": {
										"value": "@pipeline().parameters.pp_file",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pp_system": {
						"type": "string",
						"defaultValue": "project-contianer"
					},
					"pp_folder": {
						"type": "string",
						"defaultValue": "project/output"
					},
					"pp_file": {
						"type": "string",
						"defaultValue": "SalesLTselect"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDBselect1')]",
				"[concat(variables('factoryId'), '/datasets/para_data_txt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/7_file_to_DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "filetodb",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "para_data_txt",
								"type": "DatasetReference",
								"parameters": {
									"ds_system": {
										"value": "@pipeline().parameters.pp_system",
										"type": "Expression"
									},
									"ds_directory": {
										"value": "@pipeline().parameters.pp_folder",
										"type": "Expression"
									},
									"ds_file": {
										"value": "@pipeline().parameters.pp_file",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlinsert",
								"type": "DatasetReference",
								"parameters": {
									"ds_table": {
										"value": "@pipeline().parameters.pp_table",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pp_system": {
						"type": "string",
						"defaultValue": "project-contianer"
					},
					"pp_folder": {
						"type": "string",
						"defaultValue": "project/output"
					},
					"pp_file": {
						"type": "string",
						"defaultValue": "SalesLTselect"
					},
					"pp_table": {
						"type": "string",
						"defaultValue": "report1"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/para_data_txt')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlinsert')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/8_DB_to_DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "filetodb",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from [SalesLT].[report1]\nwhere Color='Red'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDBselect2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlinsert",
								"type": "DatasetReference",
								"parameters": {
									"ds_table": {
										"value": "@pipeline().parameters.pp_table",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pp_system": {
						"type": "string",
						"defaultValue": "project-contianer"
					},
					"pp_folder": {
						"type": "string",
						"defaultValue": "project/output"
					},
					"pp_file": {
						"type": "string",
						"defaultValue": "SalesLTselect"
					},
					"pp_table": {
						"type": "string",
						"defaultValue": "report2"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDBselect2')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlinsert')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/9_txt_to_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy txt to csv",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "para_data_txt",
								"type": "DatasetReference",
								"parameters": {
									"ds_system": {
										"value": "@pipeline().parameters.pp_system",
										"type": "Expression"
									},
									"ds_directory": {
										"value": "@pipeline().parameters.pp_folder_in",
										"type": "Expression"
									},
									"ds_file": {
										"value": "@pipeline().parameters.pp_file",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "para_data_csv",
								"type": "DatasetReference",
								"parameters": {
									"ds_system": {
										"value": "@pipeline().parameters.pp_system",
										"type": "Expression"
									},
									"ds_directory": {
										"value": "@pipeline().parameters.pp_folder_out",
										"type": "Expression"
									},
									"ds_file": {
										"value": "@pipeline().parameters.pp_csv",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "copy txt to csv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"ds_system": {
											"value": "@pipeline().parameters.pp_system",
											"type": "Expression"
										},
										"ds_directory": {
											"value": "@pipeline().parameters.pp_folder_out",
											"type": "Expression"
										},
										"ds_file": {
											"value": "@pipeline().parameters.pp_file",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pp_system": {
						"type": "string"
					},
					"pp_folder_in": {
						"type": "string"
					},
					"pp_file": {
						"type": "string"
					},
					"pp_folder_out": {
						"type": "string"
					},
					"pp_csv": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/para_data_txt')]",
				"[concat(variables('factoryId'), '/datasets/para_data_csv')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDBselect1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurSQDBBLL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurSQDBBLL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDBselect2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurSQDBBLL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "report1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurSQDBBLL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlinsert')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurSQDBBLL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ds_table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Color",
						"type": "varchar"
					},
					{
						"name": "Weight",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": {
						"value": "@dataset().ds_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurSQDBBLL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesLTProduct.txt",
						"folderPath": "project/input",
						"fileSystem": "project-contianer"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductID\tName\tProductNumber\tColor\tStandardCost\tListPrice\tSize\tWeight\tProductCategoryID\tProductModelID\tSellStartDate\tSellEndDate\tDiscontinuedDate\tThumbNailPhoto\tThumbnailPhotoFileName\trowguid\tModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "project/output",
						"fileSystem": "project-contianer"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesLTProduct.txt",
						"folderPath": "project/output",
						"fileSystem": "project-contianer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductID\tName\tProductNumber\tColor\tStandardCost\tListPrice\tSize\tWeight\tProductCategoryID\tProductModelID\tSellStartDate\tSellEndDate\tDiscontinuedDate\tThumbNailPhoto\tThumbnailPhotoFileName\trowguid\tModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "project/archieve",
						"fileSystem": "project-contianer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvfortransform')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesLTProduct.txt",
						"folderPath": "project/output",
						"fileSystem": "project-contianer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "ProductNumber",
						"type": "String"
					},
					{
						"name": "Color",
						"type": "String"
					},
					{
						"name": "StandardCost",
						"type": "String"
					},
					{
						"name": "ListPrice",
						"type": "String"
					},
					{
						"name": "Size",
						"type": "String"
					},
					{
						"name": "Weight",
						"type": "String"
					},
					{
						"name": "ProductCategoryID",
						"type": "String"
					},
					{
						"name": "ProductModelID",
						"type": "String"
					},
					{
						"name": "SellStartDate",
						"type": "String"
					},
					{
						"name": "SellEndDate",
						"type": "String"
					},
					{
						"name": "DiscontinuedDate",
						"type": "String"
					},
					{
						"name": "ThumbNailPhoto",
						"type": "String"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/para_data_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakelinkedservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ds_system": {
						"type": "string"
					},
					"ds_directory": {
						"type": "string"
					},
					"ds_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().ds_file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().ds_directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ds_system",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/para_data_txt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakelinkedservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ds_system": {
						"type": "string"
					},
					"ds_directory": {
						"type": "string"
					},
					"ds_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().ds_file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().ds_directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ds_system",
							"type": "Expression"
						}
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/para_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakelinkedservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ds_file_system": {
						"type": "string"
					},
					"ds_directory": {
						"type": "string"
					},
					"ds_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().ds_file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().ds_directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ds_file_system",
							"type": "Expression"
						}
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurSQDBBLL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzurSQDBBLL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakelinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakelinkedservice_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakelinkedservice_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/T1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "1_firstpipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-11-03T11:15:00",
						"timeZone": "Romance Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/1_firstpipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "1_firstpipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-11-02T11:20:00",
						"timeZone": "Romance Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/1_firstpipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "csvfortransform",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "para_data_csv",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ProductID as integer,",
						"          Name as string,",
						"          ProductNumber as string,",
						"          Color as string,",
						"          StandardCost as string,",
						"          ListPrice as string,",
						"          Size as string,",
						"          Weight as string,",
						"          ProductCategoryID as string,",
						"          ProductModelID as string,",
						"          SellStartDate as string,",
						"          SellEndDate as string,",
						"          DiscontinuedDate as string,",
						"          ThumbNailPhoto as string,",
						"          ThumbnailPhotoFileName as string,",
						"          rowguid as string,",
						"          ModifiedDate as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          ProductID,",
						"          Name,",
						"          ProductNumber,",
						"          Color,",
						"          Weight",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 filter(ProductID>700) ~> filter1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csvfortransform')]",
				"[concat(variables('factoryId'), '/datasets/para_data_csv')]"
			]
		}
	]
}